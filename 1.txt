import javax.imageio.ImageIO;
import javax.imageio.ImageWriter;
import javax.imageio.stream.ImageOutputStream;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class CombineTiffToTiff {

    public static void main(String[] args) throws IOException {
        // Input TIFF files
        File file1 = new File("1.tiff");
        File file2 = new File("2.tiff");

        // Output TIFF file
        File outputFile = new File("result.tiff");

        // Read TIFF images
        List<BufferedImage> images = new ArrayList<>();
        images.add(ImageIO.read(file1));
        images.add(ImageIO.read(file2));

        // Get TIFF writer
        Iterator<ImageWriter> writers = ImageIO.getImageWritersByFormatName("tiff");
        if (!writers.hasNext()) {
            throw new IllegalStateException("No TIFF writer found");
        }
        ImageWriter writer = writers.next();

        // Create TIFF image output stream
        ImageOutputStream ios = ImageIO.createImageOutputStream(outputFile);
        writer.setOutput(ios);

        // Set TIFF compression (optional - uncomment if needed)
        // ImageWriteParam params = writer.getDefaultWriteParam();
        // params.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
        // params.setCompressionType("LZW"); 

        // Write TIFF image
        try {
            writer.write(null, new javax.imageio.IIOImage(images.get(0), null, null), null); 
            for (int i = 1; i < images.size(); i++) {
                writer.writeInsert(i, new javax.imageio.IIOImage(images.get(i), null, null), null); 
            }
        } finally {
            // Close streams and dispose resources
            ios.close();
            writer.dispose();
        }

        System.out.println("TIFF image created successfully!");
    }
}
